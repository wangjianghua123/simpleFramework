<?php/** * 企业认证申请 */!defined('IN_UC') && exit('Access Denied');class certificate extends base {    public $_uid;    public $_company_id;    public $_uc_usertype; //1普通用户 2企业用户    public $_realname;    function __construct() {        header("Content-type:text/html;charset=utf-8;");        parent::__construct();        if (!$this->session('uc_offcn_uid')) {            IS_AJAX && ajaxReturns(0, '请重新登录后操作', 0);            $this->redirect($this->url('login', '', 'foreuser'));        } else {            $this->_uid = $this->session('uc_offcn_uid');            $this->_company_id = $this->session('uc_company_id');            $this->_uc_usertype = $this->session('uc_usertype');            if ($this->_uc_usertype == 1) {//只有企业用户才能访问                ShowMsg("出错了，该链接不存在或您没有访问该链接的权限！", -1);                die;            }        }    }    /**     * 企业认证     */    function actionindex() {        $model = $this->load("company");        $where = array('cid'=>$this->_company_id);        $isrz = $model->getcertbyarr($where);        $showapply = 0;        if (!empty($isrz)) {            $showapply = $isrz["verify"];        } else {            $showapply = -1;        }        $this->render('index', array(            'showapply' => $showapply        ));    }    function actionunbind() {        $request = new grequest();        $showapply = $request->getParam('showapply') ? (int) $request->getParam('showapply') : 0; //0未提交1已提交2驳回        $model = $this->load("company");        if (empty($this->_company_id)) {            $where = array('uid' => $this->_uid);        } else {            $where = array('cid' => $this->_company_id);        }        $isrz = $model->getcertbyarr($where, "verify,refuse_reason");        if (!empty($isrz)) {            $showapply = $isrz["verify"] == 1 ? 2 : 1;            $reason = $isrz['refuse_reason'];        }        $this->render('unbind', array(            'showapply' => $showapply,            'reason' => $reason        ));    }    /**     * 企业认证申请     */    function actionapply() {        //检查是否绑定公司        $company = $this->load('company');        //公司信息        $cinfo = $company->getcompanyinfo($this->_company_id, 'c_id,c_name,c_short_name');        //绑定相关信息        $binfo = $company->getcompanybindbycid($this->_company_id);        if (empty($binfo)) {            IS_AJAX && ajaxReturns(0, '绑定数据错误', 0);            ShowMsg("绑定数据错误", $this->url('writeusertocompany', '', 'userforcompany'));            die;        }        if ($binfo['uid'] != $this->_uid) {            IS_AJAX && ajaxReturns(0, '绑定信息与您的个人信息不符', 0);            ShowMsg("绑定信息与您的个人信息不符", $this->url('writeusertocompany', '', 'userforcompany'));            die;        }        //获取公司信息        $this->render('apply', array('cinfo' => $cinfo, 'binfo' => $binfo));    }    function actionunbindapply() {        $model = $this->load('company');        $info = $model->getcertbyarr(array('uid' => $this->_uid), 'id,hr_uid,company_id,company_name,company_email,company_phone,imgid');        if ($info['imgid'] > 0) {            $imgmodel = $this->load('uploadfile');            $imginfo = $imgmodel->getimagebyid(array('id' => $info['imgid']), 'id,imagepath');            if (!empty($imginfo)) {                $info['imagepath'] = $imginfo['imagepath'];            }        }        $this->render('unbindapply', array('info' => $info));    }    /**     * 上传企业营业证书     */    function actionuploadfile() {        $request = new grequest();        $fromtype = $request->getParam("type") ? htmlspecialchars($request->getParam("type")) : "";        $imgid = $request->getParam("imgid") ? (int) $request->getParam("imgid") : 0;        if (empty($_FILES)) {            IS_AJAX && ajaxReturns(0, '没有文件了', 0);        }        $imgmodel = $this->load("uploadfile");        if (!empty($imgid)) {            $imgmodel->imgdelete($imgid);        }        $imguse = "company/" . $fromtype . "/"; //图片用途        $type = array("jpg", "jpeg", "png", "gif"); //设置允许上传文件的类型        $file = $_FILES["content"];        $pinfo = pathinfo($file["name"]);        //判断文件类型           if (!in_array(strtolower($pinfo["extension"]), $type)) {            $text = implode(",", $type);            $error = "您只能上传以下类型文件: " . $text;            ajaxReturns(0, $error, 0, 0, 'jsons');        }        $picname = $file['name'];        $picsize = $file['size'];        if ($picname != "") {            if ($picsize > 10240000) {                IS_AJAX && ajaxReturns(0, '图片大小不能超过10M', 0);            }            //生成文件名称            $pics = generateRandStr(10) . '.' . $pinfo["extension"];            //上传路径            list($y, $m, $d) = explode('-', date('Y-m-d'));            $imgpath = 'uploads/' . $imguse . $y . "/" . $m . $d;            $file_folder = ROOT_PATH . "/" . $imgpath;            if (!file_exists($file_folder)) {                dir_create($file_folder);            }            $fullname = $file_folder . "/" . $pics;            move_uploaded_file($file['tmp_name'], $fullname);            //上传图片基础数据            $filedata = array(                "imagename" => $file["name"], //图片原名                "imagepath" => $imgpath . "/" . $pics, //图片路径                "imagesize" => $file["size"], //图片大小                "imageext" => $pinfo["extension"], //图片扩展名                "userid" => $this->_uid, //上传人id                "username" => $this->_uname, //上传人姓名                "uploadtime" => time(), //上传时间                "uploadip" => get_client_ip(), //上传人IP                "imagetype" => 5            );            $imgid = $imgmodel->imginsert($filedata);            ajaxReturns(1, '图片上传成功', array("path" => $imgpath . "/" . $pics, 'imgid' => $imgid), 0, 'jsons');        } else {            ajaxReturns(0, '图片上传失败', 0, 0, 'jsons');        }    }    /**     * 提交公司营业执照或副本     */    function actiondoapply() {        $request = new grequest();        $cid = $request->getParam("cid") ? (int) $request->getParam("cid") : 0; //公司编号        $cname = $request->getParam("company_name") ? htmlspecialchars($request->getParam("company_name")) : ""; //公司名称        $imgid = $request->getParam("imgid") ? (int) $request->getParam("imgid") : 0;        $certid = $request->getParam("certid") ? (int) $request->getParam("certid") : 0;        $cemail = $request->getParam("company_email") ? htmlspecialchars($request->getParam("company_email")) : ""; //公司邮箱        $cphone = $request->getParam("company_phone") ? htmlspecialchars($request->getParam("company_phone")) : ""; //公司电话        if (0 == $cid) {            ShowMsg("请先绑定公司后再提交此申请", -1);            die;        }        if (empty($cname)) {            ShowMsg("请先绑定公司后再提交此申请", -1);            die;        }        if (0 == $imgid) {            ShowMsg("请先上传营业执照或副本再提交此申请", -1);            die;        }        if(empty($cemail)){            ShowMsg("请填写企业邮箱", -1);            die;        }        if(empty($cphone)){            ShowMsg("请填写企业电话", -1);            die;        }        $isemail = $this->checkemail($cemail);        if ($isemail == false) {            ShowMsg("请填写正确格式的邮箱地址", -1);            die;        }        $isphone = $this->checkphone($cphone);        if ($isphone == false) {            ShowMsg("请填写正确格式的手机号码", -1);            die;        }        $data = array();        //HR企业认证申请表基础数据        $data['hr_uid'] = $this->_uid;        $data['company_id'] = $cid;        $data['company_name'] = $cname;        $data['imgid'] = $imgid;        $data['add_time'] = time();        $data['verify'] = 0; //认证状态 0正常1未通过2通过        $data['isbind'] = 1; //公司绑定 0未绑定1已绑定        $data['company_email'] = $cemail;        $data['company_phone'] = $cphone;        //创建事务处理        init_db()->createCommand()->query("START TRANSACTION");        $model = $this->load('company');        if (0 == $certid) {            $ret = $model->inserthrcertificate($data);        } else {            $ret = $model->edithrcertificate($certid, $data);        }        if (false == $ret) {            init_db()->createCommand()->query("ROLLBACK");        }        init_db()->createCommand()->query("COMMIT");        ShowMsg("提交成功", $this->url('index', '', 'certificate'));        die;    }    /**     * 提交公司营业执照或副本（用于未绑定公司的用户）     */    function actiondounbindapply() {        $request = new grequest();        $cname = $request->getParam("cname") ? htmlspecialchars($request->getParam("cname")) : ""; //公司名称        $cemail = $request->getParam("email") ? htmlspecialchars($request->getParam("email")) : ""; //接收简历邮箱        $cphone = $request->getParam("phone") ? htmlspecialchars($request->getParam("phone")) : ""; //接收简历邮箱        $imgid = $request->getParam("imgid") ? (int) $request->getParam("imgid") : 0;        $certid = $request->getParam("certid") ? (int) $request->getParam("certid") : 0;        $isexist = $request->getParam("isexist") ? (int) $request->getParam("isexist") : 0;        $cid = $request->getParam("cid") ? (int) $request->getParam("cid") : 0;        if (empty($cname)) {            ShowMsg("请先填写公司名称后再提交此申请", -1);            die;        }        if (empty($cemail)) {            ShowMsg("请先填写接收简历邮箱后再提交此申请", -1);            die;        }        if (empty($cphone)) {            ShowMsg("请先填写联系电话后再提交此申请", -1);            die;        }        if (0 == $imgid) {            ShowMsg("请先上传营业执照或副本再提交此申请", -1);            die;        }        $isemail = $this->checkemail($cemail);        if ($isemail == false) {            ShowMsg("请填写正确格式的邮箱地址", -1);            die;        }        $isphone = $this->checkphone($cphone);        if ($isphone == false) {            ShowMsg("请填写正确格式的手机号码", -1);            die;        }        $data = array();        $userid = $this->_uid;        //HR企业认证申请表基础数据        $data['hr_uid'] = $userid;        $data['company_id'] = $cid;        $data['company_name'] = $cname;        $data['company_email'] = $cemail;        $data['company_phone'] = $cphone;        $data['imgid'] = $imgid;        $data['add_time'] = time();        $data['verify'] = 0; //认证状态 0正常1未通过2通过        $data['isbind'] = $isexist; //是否新创建公司0否1是        //创建事务处理        init_db()->createCommand()->query("START TRANSACTION");        $model = $this->load('company');        $certinfo = $model->getcertbyarr(array('uid'=>$userid,'company_id'=>$cid));        if (empty($certinfo)) {            $ret = $model->inserthrcertificate($data);        } else {            $ret = $model->edithrcertificate($certinfo['id'], $data);        }        if (false == $ret) {            init_db()->createCommand()->query("ROLLBACK");        }        init_db()->createCommand()->query("COMMIT");        $sdata = array();        //公司绑定表基础数据        $sdata["uid"] = $userid;        $sdata["company_id"] = $cid;        $sdata["contact_phone"] = $cphone;        $sdata["contact_email"] = $cemail;        $sdata["status"] = 0;        //判断公司与用户的绑定关系是否存在        $isexistbind = $model->getusertocompany($userid);        if (!empty($isexistbind)) {            $sid = $isexistbind['id'];            $sret = $model->edituserforcompany(array('id' => $sid, 'uid' => $userid), $sdata); //恢复用户与公司的绑定服务            if (false == $sret) {                init_db()->createCommand()->query("ROLLBACK");            }        } else {            $sid = $model->adduserforcompany($sdata);        }        if (false == $sid) {            init_db()->createCommand()->query("ROLLBACK");            $this->error("绑定用户与公司关系失败");            die;        }        $this->setsession('uc_company_id', $cid);        $this->setcookie('uc_company_id', $cid, 3600 * 24);        ShowMsg("提交成功", $this->url('userbindcompany', array('showapply' => 1), 'userforcompany'));        die;    }}?>