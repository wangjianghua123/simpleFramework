<?php/** * 站内简历管理(HR收费服务功能) * @date 2016-01-08 * @author fmj */!defined('IN_UC') && exit('Access Denied');require_once UC_ROOT . './lib/ftps.class.php';class stationresume extends base {    public $_uid;    public $_usertype;    public $_stationcache;    public $host;    public $username;    public $password;    public $port;    public $pasv;    public $ssl;    public $timeout;    public $ftps;    public $df_path = 'resumefiles'; //下载服务器文件目录    public $payfee = 50;    function __construct() {        parent::__construct();        $this->_uid = $this->session('uc_offcn_uid');        $this->_usertype = $this->session('uc_usertype');        $this->_stationcache = S('stationcache');        if ($this->_usertype == 1 || empty($this->_usertype)) {            ShowMsg("出错了，该链接不存在或您没有访问该链接的权限！", -1);            die;        }        $this->getcertstatus();    }    function userlogin() {        if (!$this->session('uc_offcn_uid')) {            IS_AJAX && ajaxReturns(0, '请重新登录后操作', 0);            $this->redirect($this->url('login', '', 'foreuser'));        } else {            $this->_uid = $this->session('uc_offcn_uid');        }    }    //下载全站简历首页    public function actionindex() {        $this->userlogin();        $ispay = $this->actioncheckuserpay($this->_uid);        $this->render('index', array('_stationcache' => $this->_stationcache,'pst'=>$ispay));    }        //下载全站简历文件列表页(展示每日新增、总数、是否开通页面)    public function actionprelist() {        die;        $this->userlogin();        //查看用户是否已支付        $ispay = $this->actioncheckuserpay($this->_uid);        $list = $this->_getftplist();        $this->render('prelist', array(            'ispay' => $ispay,            'list' => $list,            '_stationcache' => $this->_stationcache        ));    }        //可下载简历列表页    public function actionlist() {        $this->userlogin();        $request = new grequest();        $dir = $request->getParam("dir");        $dir = isset($dir) && trim($dir) ? str_replace(array('..\\', '../', './', '.\\', '..'), '', trim($dir)) : 'resumefiles';        $province = $request->getParam("province") ? urldecode($request->getParam("province")) : "";        $sort = $request->getParam("sort") ? (int) $request->getParam("sort") : 0;        if ($sort > 0 && $sort < 10) {//小于10的左侧补零            $sort = str_pad($sort, 2, "0", STR_PAD_LEFT);        }        $viewpage = ($dir != "resumefiles") ? "downlist" : "list";        //查看用户是否已支付        $ispay = $this->actioncheckuserpay($this->_uid);        if(!$ispay){            $this->redirect($this->url('prelist',null,'stationresume'));        }        $list = $this->_getftplist($dir, $province, $sort);        $this->render($viewpage, array(            'ispay' => $ispay,            'list' => $list,            'dir' => $dir,            'sort' => $sort,            'province' => $province,            '_stationcache' => $this->_stationcache        ));    }        //获取远程FTP文件列表    private function _getftplist($dir = "resumefiles", $province = "", $sort = 0) {        if (!empty($province) && !empty($sort)) {            $dir .= "/" . $sort . "_" . $province;        }        $list = $listname = $sorts = array();        if (!empty($this->_stationcache)) {            $this->host = "dl.kjiuye.com";            $this->username = "dl.kjiuye.rd";            $this->password = "OPkfuxd93hd,cdw";            $this->port = "1021";            $this->pasv = true;            $this->ssl = false;            $this->timeout = 3600;            //ftp文件列表            $dirpath = (empty($dir)) ? $this->df_path : ($dir != $this->df_path) ? $this->df_path . "/" . $dir : $this->df_path;            $ftps = new ftps();            $fconn = $ftps->connect($this->host, $this->username, $this->password, $this->port, $this->pasv, $this->ssl, $this->timeout);            if (!$fconn) {                return false;            }            $list = $ftps->rawlist($dirpath);            $timesort = array();            foreach ($list as $lk => $lv) {                $fileinfo = explode(' ', $lv);                $fnum = count($fileinfo);                $isdir = strstr($fileinfo[0], 'd') ? 1 : 0;                if($isdir == 0){                    $addtime = $fileinfo[$fnum - 4]." ".$fileinfo[$fnum - 3]." ".$fileinfo[$fnum - 2];                    $timesort[] = strtotime($addtime);                    $listname[$lk]['addtime'] = strtotime($addtime);                }                $filename = $fileinfo[$fnum - 1];                if (strpos($filename, '_')) {                    $parr = explode('_', $filename);                    $listname[$lk]['sort'] = $parr[0];                    $filename = $parr[1];                }                $listname[$lk]['isdir'] = $isdir;                $listname[$lk]['egname'] = $filename;                if ($dir == 'list' || $dir == 'resumefiles') {//只有第一层目录才有新增数量、总数等信息                    $listname[$lk]['chname'] = ($isdir == 1) ? $this->_stationcache[$filename]['chname'] : $filename;                    $listname[$lk]['sort'] = $this->_stationcache[$filename]['sort'];                    $listname[$lk]['edaynum'] = $this->_stationcache[$filename]['edaynum'];                    $listname[$lk]['allnum'] = $this->_stationcache[$filename]['allnum'];                } else {                    $listname[$lk]['chname'] = $filename;                }                $sorts[] = $this->_stationcache[$filename]['sort'];            }			if(!empty($sorts)){				$listname = $this->multi_array_sort($listname,'sort',SORT_ASC); //按sort进行排序			}        }        if(!empty($timesort)){            $listname = $this->multi_array_sort($listname, 'addtime',SORT_DESC); //按时间进行排序        }        return $listname;    }		/**	 * 二维数组排序	 */	function multi_array_sort($multi_array,$sort_key,$sort=SORT_ASC){		if(is_array($multi_array)){  			foreach ($multi_array as $row_array){  				if(is_array($row_array)){  					$key_array[] = $row_array[$sort_key];  				}else{  					return -1;  				}  			}  		}else{  			return -1;  		}		array_multisort($key_array,$sort,$multi_array); 		return $multi_array;  	}         //查询是否为付款用户    public function actioncheckuserpay($uid = '', $type = 's') {        $this->userlogin();		return true;//暂定为已支付(免费)--后期可能会收费 2016-03-03        if (empty($uid)) {            $uid = $_REQUEST['uid'];        }        $model = $this->load('station');        $ispay = false;        $userorder = $model->getorderbyuid($uid);        if (!empty($userorder) && $userorder['order_status'] == 1) {            $servicedate = date('Y',$userorder['pay_time']) + 1 . '-' . date('m-d',$userorder['pay_time']);//一年后日期            $nowdate = date("Y-m-d");//判断服务期限，根据(当前时间-(实际支付时间的年份+1))来计算            if($nowdate < $servicedate){                $ispay = true;            }        }        if ($type == 's') {            return $ispay;        } else {            echo $ispay;        }    }    //文件下载    public function actiondownfile() {        $this->userlogin();        $request = new grequest();        $filename = $request->getParam("flname") ? htmlspecialchars($request->getParam("flname")) : "";        $dir = $request->getParam("dir") ? htmlspecialchars($request->getParam("dir")) : "";        $sort = $request->getParam("sort") ? (int) $request->getParam("sort") : 0;        $province = $request->getParam("province") ? htmlspecialchars($request->getParam("province")) : "";        if ($sort > 0 && $sort < 10) {//小于10的左侧补零            $sort = str_pad($sort, 2, "0", STR_PAD_LEFT);        }        if (!empty($sort) && !empty($province)) {            $dir .= "/" . $sort . "_" . $province;        }        if (empty($filename) || empty($dir)) {            ShowMsg("对不起，您选择的文件有误，请刷新后重新操作！", -1);            die;        }        $data = array(            'uid' => $this->_uid,            'filename' => $filename,            'dir' => $dir        );        $sign = $this->create_sign($data);        $token = $this->create_token($data);        ajaxReturns(1, '', array('sign' => $sign, 'token' => $token));    }    //CURL    private function send($url, $post_data = '', $method = 'POST', $timeout = 3) {        $ch = curl_init(); //初始化一个新的curl会话，返回一个cURL句柄.        curl_setopt($ch, CURLOPT_URL, $url); // 需要获取的URL地址         curl_setopt($ch, CURLOPT_REFERER, 'www.kjiuye.com/dl'); //伪造来源referer        curl_setopt($ch, CURLOPT_HTTPHEADER, array('User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US) \r\n Accept: */*')); //header头        curl_setopt($ch, CURLOPT_TIMEOUT, $timeout); //请求超时时间,为了防止资源被长期占有        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); //是否接收请求返回的数据 1接收 2不接受        if ($method == 'POST')            curl_setopt($ch, CURLOPT_POST, 1); //post方式向远程URL传递参数 1开启post请求 0不开启        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);        $content = curl_exec($ch); //接收请求返回的数据        $response = curl_getinfo($ch); //请求的详细信息        curl_close($ch); //关闭CURL句柄        return $content;    }        //创建token值    private function create_token($data) {        ksort($data);        reset($data);        $str = http_build_query($data);        return base64_encode($str);    }    //创建签名    private function create_sign($data, $key = "offcnkjy2016|") {        ksort($data);        reset($data);        $str = http_build_query($data);        return md5($str . $key);    }    public function actionservice() {        die;        //查看用户是否已支付        $ispay = $this->actioncheckuserpay($this->_uid);        $this->render('service',array('payfee'=>$this->payfee,'ispay'=>$ispay));    }    //开通简历下载服务    public function actionopenservice() {        die;        $this->userlogin();        $model = $this->load('station');        $insert = array();        $uid = $this->_uid;        //获取用户信息        $usr = $this->load("foreuser");        //查看用户是否已支付        $ispay = $this->actioncheckuserpay($this->_uid);        if($ispay){            ShowMsg("您已开通服务，无需再次开通", $this->url("list",null,"stationresume"));            exit;        }        $uinfo = $usr->getRow($uid, 'phone,email');        if(empty($uinfo)){            ShowMsg("获取用户信息失败", $this->url("index",null,"stationresume"));            exit;        }        $ret_url = isset($_SERVER['HTTP_REFERER']) ? $_SERVER['HTTP_REFERER'] : "";        $insert['uid'] = $uid;        $insert['order_id'] = 'KJY' . $uid . date('YmdHis') . mt_rand(1000, 9999);        $insert['pay_fee'] = $this->payfee;        $insert['pay_fashion'] = 1; //支付方式 暂只支持支付宝        $insert['order_phone'] = (empty($uinfo['phone'])) ? $uinfo['email'] : $uinfo['phone']; //使用用户注册帐号        $insert['order_status'] = 0;        $insert['add_time'] = time();        $userorder = $model->getorderbyuid($uid);        if(empty($userorder)){            $orderid = $model->addorder($insert);        }        if($userorder && $userorder['order_status']==0){//更新某用户已存在且未支付的订单            $orderid = $userorder['id'];            $model->editorder($insert,$orderid);        }        if (!$orderid) {            ShowMsg("订单id为0", $ret_url);            exit;        }        //来路        header('Content-type:text/html;charset=utf-8');        $data = array();        $data['total'] = $insert['pay_fee'];        $data['order_code'] = $insert['order_id'];        $data['order_status'] = $insert['pstatus'];        $data['body'] = '开通简历下载服务';        $this->getPayingZFB(1, $uinfo, $data); //使用支付宝    }    //支付宝支付    private function getPayingZFB($ispay, $uinfo, $data) {        $datas = array();        if (!empty($uinfo["phone"])) {            $subaddstr = $uinfo["phone"];            $pregstr = "/[^\x{4e00}-\x{9fa5}A-Za-z0-9]/u";            $subaddstr = preg_replace($pregstr, '', $subaddstr);        } else if (!empty($uinfo["email"])) {            $subaddstr = $uinfo["email"];        } else {            $subaddstr = 'pay';        }        $datas["email"] = $uinfo['email'];        $datas["showhtml"] = PUBLIC_URL . "stationresume/list/";        if ($ispay == 1) {            $datas["bankPay"] = "bankPay";        } else {            $datas["bank"] = "";            $datas["bankPay"] = "directPay";        }        $WIDseller_email = "cw1@offcn.com";        $WIDout_trade_no = $data["order_code"];        $WIDsubject = $data['body'];        $WIDtotal_fee = $data['total'];        if (!$data['order_status']) {            $datas['order_status'] = 1;        }        $WIDbody = $data['body'];        $WIDdefaultbank = $datas["bank"];        $WIDshow_url = $datas["showhtml"];        $WIDbankPay = $datas["bankPay"];        //paying        require_once(ROOT_PATH . "/pay/alipay.config.php");        require_once(ROOT_PATH . "/pay/lib/alipay_submit.class.php");        //支付类型        $payment_type = "1"; //必填，不能修改        //服务器异步通知页面路径        $notify_url = PUBLIC_URL . "pay/notify_url.php";        //页面跳转同步通知页面路径        $return_url = PUBLIC_URL . "pay/return_url.php";        //商户订单号        $out_trade_no = $WIDout_trade_no; //商户网站订单系统中唯一订单号，必填        //订单名称        $subject = $WIDsubject;        //必填        //付款金额        $total_fee = $WIDtotal_fee;        //必填        //订单描述        $body = $WIDbody;        //默认支付方式        $paymethod = $WIDbankPay; //必填        //默认网银        $defaultbank = $WIDdefaultbank; //必填，银行简码请参考接口技术文档        //商品展示地址        $show_url = $WIDshow_url;        //防钓鱼时间戳        $anti_phishing_key = "";        //若要使用请调用类文件submit中的query_timestamp函数        //客户端的IP地址        $exter_invoke_ip = "";        //构造要请求的参数数组，无需改动        $parameter = array(            "service" => "create_direct_pay_by_user",            "partner" => trim($alipay_config['partner']),            "payment_type" => $payment_type,            "notify_url" => $notify_url,            "return_url" => $return_url,            "seller_id" => trim($alipay_config['partner']),            "out_trade_no" => $out_trade_no,            "subject" => $subject,            "total_fee" => $total_fee,            "body" => $body,            "paymethod" => $paymethod,            "defaultbank" => $defaultbank,            "show_url" => $show_url,            "anti_phishing_key" => $anti_phishing_key,            "exter_invoke_ip" => $exter_invoke_ip,            "_input_charset" => trim(strtolower($alipay_config['input_charset']))        );        //建立请求        $alipaySubmit = new AlipaySubmit($alipay_config);        $html_text = $alipaySubmit->buildRequestForm($parameter, "get", "确认");        echo '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">                <html>                <head>                        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">                        <title>跳转中.....</title>                </head>                <body onload="document.alipaysubmit.submit();">                  跳转中.....';        echo $html_text;        echo '</body></html>';        exit;    }}?>